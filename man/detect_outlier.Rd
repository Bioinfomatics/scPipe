% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc.R
\name{detect_outlier}
\alias{detect_outlier}
\title{Detect outliers based on QC metrics}
\usage{
detect_outlier(sce, comp = 1, sel_col = NULL, type = c("low", "both",
  "high"), conf = c(0.9, 0.99), batch = FALSE)
}
\arguments{
\item{sce}{a \code{SingleCellExperiment} object containing QC metrics.}

\item{comp}{the number of component used in GMM. can be one or two.}

\item{sel_col}{a vector of column names, indicate the columns to use for QC.
by default it will be the statistics generated by `calQC_metrics()`}

\item{type}{only looking at low quality cells (`low`) or possible doublets (`high`)
or both (`both`)}

\item{conf}{confidence interval for linear regression at lower and upper tails.
Usually this is smaller for lower tail because we hope to pick out more
low quality cells than doublets.}

\item{batch}{whether to perform quality control separately for each batch 
default is FALSE. if set to TRUE then you should have a column called `batch` 
in the `colData(sce)`}
}
\value{
an updated \code{SingleCellExperiment} object with an `outlier`` column in 
\code{int_colData}
}
\description{
the algorithm will try to find \code{comp} number of components in quality
control metrics. Then apply outlier detection on the component with the most genes detected
The rest of the components will be considered as poor quality cells. You will get more outlier
if you increase the number of \code{comp}.
}
\details{
detect outlier using Mahalanobis distances
}
\examples{
data("sc_sample_data")
data("sc_sample_qc")
QualityControlInfo = new("AnnotatedDataFrame", data = as.data.frame(sc_sample_qc))
sce = new\\code{SingleCellExperiment}(countData = as.matrix(sc_sample_data),
               QualityControlInfo = QualityControlInfo,
               useForExprs = "counts",
               organism = "mmusculus_gene_ensembl",
               gene_id_type = "external_gene_name")
sce = calQC_metrics(scd)
sce = detect_outlier(scd)

}
