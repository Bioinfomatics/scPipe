% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrapper_scPipeCPP.R
\name{sc_demultiplex}
\alias{sc_demultiplex}
\title{sc_demultiplex}
\usage{
sc_demultiplex(inbam, outdir, bc_anno, max_mis = 1, am = "YE", ge = "GE",
  bc = "BC", mb = "OX", mito = "MT", has_UMI = TRUE)
}
\arguments{
\item{inbam}{input bam file. This should be the output of 
\code{sc_exon_mapping}}

\item{outdir}{output folder}

\item{bc_anno}{barcode annotation, first column is cell id, second column 
is cell barcode sequence}

\item{max_mis}{maximum mismatch allowed in barcode. default to be 1}

\item{am}{mapping status tag (default: YE)}

\item{ge}{gene id tag (default: GE)}

\item{bc}{cell barcode tag (default: BC)}

\item{mb}{molecular barcode tag (default: OX)}

\item{mito}{mitochondrial chromosome name. 
This should be consistant with the chromosome names in the bam file.}

\item{has_UMI}{whether the protocol contains UMI (default: TRUE)}
}
\value{
no return
}
\description{
This function will process bam file by cell barcode, 
output to outdir/count/[cell_id].csv.
the output contains information for all reads that can be mapped to exons.
including the gene id, UMI of that read and the distance to transcript end 
position.
}
\examples{
data_dir="celseq2_demo"
barcode_annotation_fn = system.file("extdata", "barcode_anno.csv", 
    package = "scPipe")
\dontrun{
# refer to the vignettes for the complete workflow
...
sc_demultiplex(file.path(data_dir, "out.map.bam"), 
    data_dir, 
    barcode_annotation_fn,has_UMI=FALSE)
...
}

}
