% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sc_workflow.R
\name{create_scd_by_dir}
\alias{create_scd_by_dir}
\title{create SCData object from data folder generated by preprocessing step}
\usage{
create_scd_by_dir(datadir, organism = NULL, gene_id_type = NULL,
  pheno_data = NULL, report = FALSE)
}
\arguments{
\item{datadir}{the directory that contains all the data and `stat` subfolder.}

\item{organism}{the organism of the data. List of possible names can be retrieved using the function 
`listDatasets`from `biomaRt` package. (i.e `mmusculus_gene_ensembl` or `hsapiens_gene_ensembl`)}

\item{gene_id_type}{gene id type of the data A possible list of ids can be retrieved using the function `listAttributes` from `biomaRt` package. 
the commonly used id types are `external_gene_name`, `ensembl_gene_id` or `entrezgene`}

\item{pheno_data}{the external phenotype data that linked to each single cell. this should be an \code{AnnotatedDataFrame} object}

\item{report}{whether to generate the html report in the data folder}
}
\value{
an SCData object
}
\description{
after we run \code{sc_gene_counting} and finish the preprocessing step. \code{create_scd_by_dir}
can be used to generate the SCData obeject from the folder that contains gene counting matrix and QC statistics.
it can also generate the html report based on the gene count and quality control statistics
}
\details{
after we run \code{sc_gene_counting} and finish the preprocessing step. \code{create_scd_by_dir}
can be used to generate the SCData obeject from the folder that contains gene counting matrix and QC statistics.
}
\examples{
\dontrun{
# the scd can be created fron the output folder of scPipe
scd = create_scd_by_dir(datadir="output_dir_of_scPipe",organism="mmusculus_gene_ensembl",gene_id_type="ensembl_gene_id",report=TRUE)
}
# or directly from the gene count and quality control matrix:
data("sc_sample_data")
data("sc_sample_qc")
QualityControlInfo = new("AnnotatedDataFrame", data = as.data.frame(sc_sample_qc))
scd = newSCData(countData = as.matrix(sc_sample_data),
               QualityControlInfo = QualityControlInfo,
               useForExprs = "counts",
               organism = "mmusculus_gene_ensembl",
               gene_id_type = "external_gene_name")

}
